/* eslint-disable eqeqeq */
// a and b do NOT correspond to registers in the computer

const TTL74181 = (a, b, controlBits) => {
  const A1 = !!(a & (1 << 0));
  const A2 = !!(a & (1 << 1));
  const A3 = !!(a & (1 << 2));
  const A4 = !!(a & (1 << 3));

  const B1 = !!(b & (1 << 0));
  const B2 = !!(b & (1 << 1));
  const B3 = !!(b & (1 << 2));
  const B4 = !!(b & (1 << 3));

  const S1 = !!(controlBits & (1 << 5));
  const S2 = !!(controlBits & (1 << 4));
  const S3 = !!(controlBits & (1 << 3));
  const S4 = !!(controlBits & (1 << 2));
  const CIN = !!(controlBits & (1 << 1));
  const M = !!(controlBits & (1 << 0));

  // Generated by Logisim Evolution
  const COUT =
    !!(
      !((!B4 && S3) || (S4 && B4) || A4) ||
      (!((B4 && S1 && A4) || (A4 && S2 && !B4)) &&
        !((!B3 && S3) || (S4 && B3) || A3)) ||
      (!((B4 && S1 && A4) || (A4 && S2 && !B4)) &&
        !((B3 && S1 && A3) || (A3 && S2 && !B3)) &&
        !((!B2 && S3) || (S4 && B2) || A2)) ||
      (!((B4 && S1 && A4) || (A4 && S2 && !B4)) &&
        !((B3 && S1 && A3) || (A3 && S2 && !B3)) &&
        !((B2 && S1 && A2) || (A2 && S2 && !B2)) &&
        !((!B1 && S3) || (S4 && B1) || A1))
    ) ||
    !!(
      !((B4 && S1 && A4) || (A4 && S2 && !B4)) &&
      !((B3 && S1 && A3) || (A3 && S2 && !B3)) &&
      !((B2 && S1 && A2) || (A2 && S2 && !B2)) &&
      !((B1 && S1 && A1) || (A1 && S2 && !B1)) &&
      CIN
    );
  const Y4 =
    (!((B4 && S1 && A4) || (A4 && S2 && !B4)) !=
      !((!B4 && S3) || (S4 && B4) || A4)) !=
    !(
      (CIN &&
        !((B1 && S1 && A1) || (A1 && S2 && !B1)) &&
        !((B2 && S1 && A2) || (A2 && S2 && !B2)) &&
        !((B3 && S1 && A3) || (A3 && S2 && !B3)) &&
        !M) ||
      (!((B2 && S1 && A2) || (A2 && S2 && !B2)) &&
        !((B3 && S1 && A3) || (A3 && S2 && !B3)) &&
        !((!B1 && S3) || (S4 && B1) || A1) &&
        !M) ||
      (!((B3 && S1 && A3) || (A3 && S2 && !B3)) &&
        !((!B2 && S3) || (S4 && B2) || A2) &&
        !M) ||
      (!((!B3 && S3) || (S4 && B3) || A3) && !M)
    );
  const Y3 =
    (!((B3 && S1 && A3) || (A3 && S2 && !B3)) !=
      !((!B3 && S3) || (S4 && B3) || A3)) !=
    !(
      (CIN &&
        !((B1 && S1 && A1) || (A1 && S2 && !B1)) &&
        !((B2 && S1 && A2) || (A2 && S2 && !B2)) &&
        !M) ||
      (!((B2 && S1 && A2) || (A2 && S2 && !B2)) &&
        !((!B1 && S3) || (S4 && B1) || A1) &&
        !M) ||
      (!((!B2 && S3) || (S4 && B2) || A2) && !M)
    );
  const Y2 =
    (!((B2 && S1 && A2) || (A2 && S2 && !B2)) !=
      !((!B2 && S3) || (S4 && B2) || A2)) !=
    !(
      (CIN && !((B1 && S1 && A1) || (A1 && S2 && !B1)) && !M) ||
      (!((!B1 && S3) || (S4 && B1) || A1) && !M)
    );
  const Y1 =
    (!((B1 && S1 && A1) || (A1 && S2 && !B1)) !=
      !((!B1 && S3) || (S4 && B1) || A1)) !=
    !(CIN && !M);
  // End generated by Logisim

  const result = Y1 + (Y2 << 1) + (Y3 << 2) + (Y4 << 3);
  return { result, carryOut: COUT };
};

const ALUCircuit = (a, b, controlBits) => {
  const aLow = a & 0b00001111;
  const bLow = b & 0b00001111;

  const low181Output = TTL74181(aLow, bLow, controlBits);

  const aHigh = (a & 0b11110000) >> 4;
  const bHigh = (b & 0b11110000) >> 4;

  let highControlBits = controlBits;
  highControlBits = highControlBits & 0b111101;
  highControlBits = highControlBits | (low181Output.carryOut << 1);
  const high181Output = TTL74181(aHigh, bHigh, highControlBits);

  const result = low181Output.result + (high181Output.result << 4);
  return {
    result,
    carryOut: !high181Output.carryOut,
    negative: !!(high181Output.result & 0b1000),
    zero: result === 0,
  };
};

module.exports = ALUCircuit;
